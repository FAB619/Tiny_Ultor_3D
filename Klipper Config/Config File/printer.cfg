# This file contains common pin mappings for RUMBA boards.  To use
# this config, the firmware should be compiled for the AVR atmega2560.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PH0
dir_pin: !PH1
enable_pin: !PL1
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PC0
#endstop_pin: ^PC1
position_endstop: 0
position_max: 200
homing_speed: 50

[stepper_y]
step_pin: PF0
dir_pin: !PL2
enable_pin: !PF1
microsteps: 16
rotation_distance: 40
#endstop_pin: ^!PC2
endstop_pin: ^!PC3
position_endstop: 200
position_max: 204
homing_speed: 50
homing_positive_dir: true

[stepper_z]
step_pin: PF3
dir_pin: PF2
enable_pin: !PK0
microsteps: 16
rotation_distance: 12
endstop_pin: ^!PC4
#endstop_pin: ^PC5
position_endstop: 0.5
position_max: 200
homing_speed: 5
homing_retract_speed: 2
homing_retract_dist: 5.0


[extruder]
step_pin: PA1
dir_pin: !PA0
enable_pin: !PA2
microsteps: 16
rotation_distance: 34.4
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PE4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK7
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

#[extruder1]
#step_pin: PA4
#dir_pin: PA3
#enable_pin: !PA5
#heater_pin: PE5
#sensor_pin: PK6
#...

#[extruder2]
#step_pin: PA7
#dir_pin: PA6
#enable_pin: !PG2
#heater_pin: PH3
#sensor_pin: PK5
#...

[heater_bed]
heater_pin: PH6
sensor_type: Generic 3950
sensor_pin: PK3
control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: PH4

[heater_fan fan1]
pin: PH5
heater_temp: 50
fan_speed: 0.3

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A10N2OQF-if00-port0


[printer]
kinematics: corexy
max_velocity: 300
max_accel: 500
max_z_velocity: 50
max_z_accel: 100

[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}


# "RepRapDiscount 2004 Smart Controller" type displays
[display]
lcd_type: hd44780
rs_pin: PD2
e_pin: PL7
d4_pin: PD3
d5_pin: PD7
d6_pin: PG0
d7_pin: PG1
encoder_pins: ^PB5, ^PB6
click_pin: ^!PL6

# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
#[display]
#lcd_type: st7920
#cs_pin: PD2
#sclk_pin: PD3
#sid_pin: PL7
#encoder_pins: ^PB5, ^PB6
#click_pin: ^!PL6
